import{_ as e,c as t,o as s,a}from"./app.aad5f7df.js";const _=JSON.parse('{"title":"Quickstart","description":"","frontmatter":{},"headers":[{"level":2,"title":"Running Nuxtus","slug":"running-nuxtus","link":"#running-nuxtus","children":[]},{"level":2,"title":"Set permissions","slug":"set-permissions","link":"#set-permissions","children":[{"level":3,"title":"User token","slug":"user-token","link":"#user-token","children":[]},{"level":3,"title":"Public API endpoints","slug":"public-api-endpoints","link":"#public-api-endpoints","children":[]}]},{"level":2,"title":"Get started","slug":"get-started","link":"#get-started","children":[]}],"relativePath":"quickstart.md","lastUpdated":1708602804000}'),n={name:"quickstart.md"},i=a(`<h1 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-hidden="true">#</a></h1><p>This is a quick overview of getting up and running with Nuxtus. For more details read the <a href="./using-nuxtus.html">using Nuxtus</a> section.</p><h2 id="running-nuxtus" tabindex="-1">Running Nuxtus <a class="header-anchor" href="#running-nuxtus" aria-hidden="true">#</a></h2><p>To start both the Directus (server) and Nuxt (client) simply run this command from the root of your project:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm start</span></span>
<span class="line"></span></code></pre></div><h2 id="set-permissions" tabindex="-1">Set permissions <a class="header-anchor" href="#set-permissions" aria-hidden="true">#</a></h2><h3 id="user-token" tabindex="-1">User token <a class="header-anchor" href="#user-token" aria-hidden="true">#</a></h3><p>If using a user token create/select a Directus user and create a static token in <a href="http://localhost:8055/admin/users/" target="_blank" rel="noreferrer">their user profile</a>. Scroll down till you see &quot;token&quot; and click add. Do not forget to save the user with the new token.</p><p>Copy the created token into <code>/client/.env</code> file and change the auth setting to true:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">NUXTUS_DIRECTUS_AUTH=true</span></span>
<span class="line"><span style="color:#A6ACCD;">NUXTUS_DIRECTUS_STATIC_TOKEN=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TOKEN HERE</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>Each time you create a collection make sure to assign &quot;read&quot; permissions to the role associated with the token (if not using an admin account)</p><h3 id="public-api-endpoints" tabindex="-1">Public API endpoints <a class="header-anchor" href="#public-api-endpoints" aria-hidden="true">#</a></h3><p>This choice requires no additional set up. Simply assign each collection &quot;read&quot; permissions for each collection as they are created.</p><h2 id="get-started" tabindex="-1">Get started <a class="header-anchor" href="#get-started" aria-hidden="true">#</a></h2><p>Create collections in Directus and assign permissions (as above). These collections will automatically have pages created in your Nuxt client app.</p><p>They are viewable via <code>http://localhost:3000/collection_name</code> and the source code for each page is <code>/client/pages/collection_name</code>.</p>`,16),o=[i];function r(c,l,u,d,p,h){return s(),t("div",null,o)}const k=e(n,[["render",r]]);export{_ as __pageData,k as default};
