import{_ as e,c as t,o as a,a7 as s}from"./chunks/framework.C-49Vm5p.js";const g=JSON.parse('{"title":"Quickstart","description":"","frontmatter":{},"headers":[],"relativePath":"quickstart.md","filePath":"quickstart.md","lastUpdated":1708602804000}'),i={name:"quickstart.md"},n=s(`<h1 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-label="Permalink to &quot;Quickstart&quot;">​</a></h1><p>This is a quick overview of getting up and running with Nuxtus. For more details read the <a href="./using-nuxtus.html">using Nuxtus</a> section.</p><h2 id="running-nuxtus" tabindex="-1">Running Nuxtus <a class="header-anchor" href="#running-nuxtus" aria-label="Permalink to &quot;Running Nuxtus&quot;">​</a></h2><p>To start both the Directus (server) and Nuxt (client) simply run this command from the root of your project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><h2 id="set-permissions" tabindex="-1">Set permissions <a class="header-anchor" href="#set-permissions" aria-label="Permalink to &quot;Set permissions&quot;">​</a></h2><h3 id="user-token" tabindex="-1">User token <a class="header-anchor" href="#user-token" aria-label="Permalink to &quot;User token&quot;">​</a></h3><p>If using a user token create/select a Directus user and create a static token in <a href="http://localhost:8055/admin/users/" target="_blank" rel="noreferrer">their user profile</a>. Scroll down till you see &quot;token&quot; and click add. Do not forget to save the user with the new token.</p><p>Copy the created token into <code>/client/.env</code> file and change the auth setting to true:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NUXTUS_DIRECTUS_AUTH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NUXTUS_DIRECTUS_STATIC_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TOKEN HERE&quot;</span></span></code></pre></div><p>Each time you create a collection make sure to assign &quot;read&quot; permissions to the role associated with the token (if not using an admin account)</p><h3 id="public-api-endpoints" tabindex="-1">Public API endpoints <a class="header-anchor" href="#public-api-endpoints" aria-label="Permalink to &quot;Public API endpoints&quot;">​</a></h3><p>This choice requires no additional set up. Simply assign each collection &quot;read&quot; permissions for each collection as they are created.</p><h2 id="get-started" tabindex="-1">Get started <a class="header-anchor" href="#get-started" aria-label="Permalink to &quot;Get started&quot;">​</a></h2><p>Create collections in Directus and assign permissions (as above). These collections will automatically have pages created in your Nuxt client app.</p><p>They are viewable via <code>http://localhost:3000/collection_name</code> and the source code for each page is <code>/client/pages/collection_name</code>.</p>`,16),o=[n];function r(c,l,h,u,p,d){return a(),t("div",null,o)}const m=e(i,[["render",r]]);export{g as __pageData,m as default};
