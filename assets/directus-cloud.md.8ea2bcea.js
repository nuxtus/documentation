import{_ as e,c as t,o,a as i}from"./app.aad5f7df.js";const f=JSON.parse('{"title":"Directus Cloud","description":"","frontmatter":{},"headers":[{"level":2,"title":"Configuring Directus","slug":"configuring-directus","link":"#configuring-directus","children":[]},{"level":2,"title":"Manually switching to Nuxtus Cloud","slug":"manually-switching-to-nuxtus-cloud","link":"#manually-switching-to-nuxtus-cloud","children":[]}],"relativePath":"directus-cloud.md","lastUpdated":1668840724000}'),c={name:"directus-cloud.md"},l=i('<h1 id="directus-cloud" tabindex="-1">Directus Cloud <a class="header-anchor" href="#directus-cloud" aria-hidden="true">#</a></h1><p>Nuxtus can be used with a local copy of <code>Directus</code> or the cloud hosted version of <a href="https://directus.cloud/" target="_blank" rel="noreferrer">Directus Cloud</a>. To get started you need to have an existing <code>Directus Cloud</code> account <a href="#configuring-directus">correctly configured</a> and then select the &quot;Directus Cloud&quot; option when <a href="/#new-project">creating a new Nuxtus project</a>.</p><h2 id="configuring-directus" tabindex="-1">Configuring Directus <a class="header-anchor" href="#configuring-directus" aria-hidden="true">#</a></h2><p>Currently you can&#39;t add third-party extensions to a <code>Directus Cloud</code> project so you will need to do this manually.</p><ol><li>Login to your <a href="https://directus.cloud/" target="_blank" rel="noreferrer">Directus Cloud</a> account.</li><li>Create a new project (or select an existing one). - If creating a new project your credentials will be emailed to you. You will need these to configure Nuxtus.</li><li>If creating a new <code>Nuxtus</code> project from scratch now run <code>npx create-nuxtus app-name</code> and complete <code>Nuxtus</code> installation. Alternatively, follow the instructions below for <a href="#manually-switching-to-nuxtus-cloud">manually switching to Nuxtus Cloud</a></li><li>(optional, but recommended) Edit <code>./client/nuxtus.config.ts</code> and add <code>localtunnel: { subdomain: &#39;anOriginalName&#39; }</code> so you always get the same localtunnel subdomain. Otherwise, you will need to update the Nuxtus URL in your Flows each time you restart the local Nuxt server.</li><li>Login to your Directus project</li><li>Click on Settings &gt; Flows and <code>Create Flow</code></li><li>Fill in the flow details, anything will do here but name it something like <code>Nuxtus - Create Collection</code> so you can easily identify it later.</li><li>Click the right arrow to continue and then select <code>Event Hook</code></li><li>For <code>type</code> select <code>Action (non-blocking)</code></li><li>Then select <code>items.create</code> from the <code>Scope</code> dropdown</li><li>Select <code>Directus Collections</code> from the Collections list</li><li>Then click the tick to save the flow.</li><li>On the flow diagram screen click the + icon at the end of the arrow coming out of the <code>Event Hook</code> box we just created.</li><li>Enter Name: <code>Nuxtus create</code> then select <code>Webhook / Request URL</code></li><li>Change the <code>method</code> to <code>POST</code> and paste the external Nuxt URL (from step 3 above or step 4 from <a href="#manually-switching-to-nuxtus-cloud">manually switching to Nuxtus Cloud</a>) into the <code>URL</code> field and add <code>/api/directus/collection</code> to the end. For example: <code>https://some-random-string.loca.lt/api/directus/collection</code></li><li>Add a header with a header of <code>Bypass-Tunnel-Reminder</code> and a value of <code>true</code> (the value can actually be anything)</li><li>In the <code>Request Body</code> textarea enter</li></ol><div><p><code>{{ $trigger.payload }}</code></p></div><p>then click the tick top right.</p><ol start="18"><li>Click the tick again to save the entire flow.</li></ol><p>Now we have a flow that will tell Nuxt every time you create a new collection in Directus. Next we need to make another flow to let Nuxt know when fields are created, added or deleted to update the Typescript types.</p><ol><li>Click on Settings &gt; Flows and <code>Create Flow</code></li><li>Name this Flow <code>Nuxtus - Update Types</code> (the rest of the fields can be anything). Click right arrow.</li><li>Select <code>Event Hook</code> and <code>Action (Non-blocking)</code></li><li>For scope select <code>items.create</code> and <code>items.update</code> and <code>items.delete</code></li><li>For &quot;Collections&quot; choose <code>Directus Fields</code> then click the tick at the top right</li><li>Click plus and then select <code>Webhook / Request URL</code></li><li>Change the <code>method</code> to <code>POST</code> and paste the external Nuxt URL (from step 3 above or step 4 from <a href="#manually-switching-to-nuxtus-cloud">manually switching to Nuxtus Cloud</a>) into the <code>URL</code> field and add <code>/api/directus/field</code> to the end. For example: <code>https://some-random-string.loca.lt/api/directus/field</code></li><li>Add a header with a header of <code>Bypass-Tunnel-Reminder</code> and a value of <code>true</code> (the value can actually be anything)</li><li>In the <code>Request Body</code> textarea enter</li></ol><div><p><code>{{ $trigger.payload }}</code></p></div><p>then click the tick top right. 10. Click the tick again to save the entire flow.</p><p>That&#39;s it! You can now create Collections in Directus Cloud and have fully typed pages appear in your local Nuxt environment!</p><h2 id="manually-switching-to-nuxtus-cloud" tabindex="-1">Manually switching to Nuxtus Cloud <a class="header-anchor" href="#manually-switching-to-nuxtus-cloud" aria-hidden="true">#</a></h2><p>If you already have a Nuxtus project and want to switch to using Directus Cloud you can do this manually.</p><ol><li>Edit <code>/client/.env</code> and update the <code>DIRECTUS_URL</code> to your <code>Directus Cloud</code> project URL and the email/password to yours.</li></ol><blockquote><p>Encase the password in double quotes (&quot;&#39;s) to avoid special characters not being sent</p></blockquote><ol start="2"><li><a href="./localtunnel.html#installation">Install the <code>@nuxtus/nuxt-localtunnel</code></a></li><li>Start Nuxt in development mode <code>npm run dev</code>. Make note of the external URL provided.</li><li>Continue with the <a href="#configuring-directus">Configuring Directus</a> steps above.</li></ol>',18),a=[l];function d(n,r,u,s,h,p){return o(),t("div",null,a)}const m=e(c,[["render",d]]);export{f as __pageData,m as default};
